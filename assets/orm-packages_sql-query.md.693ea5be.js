import{_ as o,T as c,z as l,A as n,I as s,O as t,V as e,X as p,D as u}from"./plugin-vue_export-helper.7e16fb6c.js";const D='{"title":"@fxjs/sql-query","description":"","frontmatter":{},"headers":[{"level":2,"title":"\u5FEB\u901F\u5F00\u59CB","slug":"\u5FEB\u901F\u5F00\u59CB"},{"level":2,"title":"Query","slug":"query"},{"level":3,"title":"new Query::Query(opts: object)","slug":"new-query-query-opts-object"},{"level":3,"title":"Query::knex","slug":"query-knex-readonly"},{"level":3,"title":"Query::Dialect","slug":"query-dialect-readonly"},{"level":3,"title":"Query::escape(sql, args)","slug":"query-escape-sql-args"},{"level":3,"title":"Query::escapeId(...els)","slug":"query-escapeid-els"},{"level":3,"title":"Query::escapeVal(val, timezone?)","slug":"query-escapeval-val-timezone"},{"level":3,"title":"Query::create()","slug":"query-create"},{"level":3,"title":"Query::select()","slug":"query-select"},{"level":3,"title":"Query::insert()","slug":"query-insert"},{"level":3,"title":"Query::update()","slug":"query-update"},{"level":3,"title":"Query::remove()","slug":"query-remove"},{"level":2,"title":"comparators","slug":"comparators"}],"relativePath":"orm-packages/sql-query.md","lastUpdated":1684005563194}',r={},i={id:"fxjs-sql-query-wip",tabindex:"-1"},k=n("code",null,"@fxjs/sql-query",-1),d=n("a",{class:"header-anchor",href:"#fxjs-sql-query-wip","aria-hidden":"true"},"#",-1),y=p('<p><a href="https://www.npmjs.org/package/@fxjs/sql-query" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/v/@fxjs/sql-query.svg" alt="NPM version"></a>\xA0 <a href="https://www.npmjs.org/package/@fxjs/sql-query" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dt/@fxjs/sql-query.svg" alt="NPM download"></a>\xA0 <a href="https://www.npmjs.org/package/@fxjs/sql-query" target="_blank" rel="noopener noreferrer"><img src="https://img.shields.io/npm/dm/@fxjs/sql-query.svg" alt="NPM download monthly"></a></p><p><code>sql-query</code>, \u7528\u4E8E\u751F\u6210\u53EF\u5B8C\u6210\u7279\u5B9A\u64CD\u4F5C\u7684 query sql, \u662F\u4E00\u4E2A\u7EAF\u7CB9\u7684\u5B57\u7B26\u4E32\u62FC\u63A5\u5DE5\u5177. \u5B83\u63D0\u4F9B\u7684\u80FD\u529B\u53EF\u4EE5\u5E2E\u52A9\u5F00\u53D1\u8005\u7B80\u5316 SQL \u6D41\u7A0B:</p><ul><li>\u57FA\u4E8E <code>Query</code> \u5BF9\u8C61, \u5BF9 SQL \u8BED\u53E5, SQL Identifier, SQL Value \u8FDB\u884C escape</li><li>\u57FA\u4E8E <code>Query</code> \u5BF9\u8C61, \u63D0\u4F9B\u4E86\u94FE\u5F0F\u6784\u9020\u5668(ChainBuilder), \u4EE5\u751F\u6210\u6EE1\u8DB3\u57FA\u672C\u4EA4\u4E92\u9700\u6C42\u7684\u8BED\u53E5 <ul><li><code>create</code>: \u751F\u6210\u4E00\u4E2A table</li><li><code>select</code>: \u4ECE table \u4E2D\u67E5\u8BE2\u6570\u636E</li><li><code>insert</code>: \u5411 table \u4E2D\u63D2\u5165\u6570\u636E</li><li><code>update</code>: \u66F4\u65B0 table \u4E2D\u7684\u6570\u636E</li><li><code>remove</code>: \u6309\u7167\u4E00\u5B9A\u7684\u6761\u4EF6\u5220\u9664 table \u4E2D\u7684\u6570\u636E</li></ul></li><li><code>Query</code> \u4E0A\u7684 <a href="./knex.html">knex</a> \u5BF9\u8C61, \u6EE1\u8DB3\u5F00\u53D1\u8005\u7075\u6D3B\u7684\u5B9A\u5236 SQL \u9700\u6C42</li></ul><p>\u652F\u6301\u7684\u6570\u636E\u5E93 dialect \u6709:</p><ul><li><code>mysql</code></li><li><code>sqlite</code></li><li><code>postgresql</code></li></ul><h2 id="\u5FEB\u901F\u5F00\u59CB" tabindex="-1">\u5FEB\u901F\u5F00\u59CB <a class="header-anchor" href="#\u5FEB\u901F\u5F00\u59CB" aria-hidden="true">#</a></h2><p>\u4F7F\u7528 <code>sql-query</code> \u4EE5\u6784\u9020\u7528\u4E8E\u751F\u6210\u540D\u4E3A <code>table1</code> \u8868\u7684 SQL.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span>   <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n\nquery<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fields</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span> <span class="token string">&#39;id&#39;</span><span class="token punctuation">,</span> <span class="token literal-property property">a_text</span><span class="token operator">:</span> <span class="token string">&#39;text&#39;</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span>\n<span class="token comment">// =&gt; &quot;create table `table1` (`id` int unsigned not null auto_increment primary key, `a_text` text)&quot;</span>\n</code></pre></div><h2 id="query" tabindex="-1">Query <a class="header-anchor" href="#query" aria-hidden="true">#</a></h2><h3 id="new-query-query-opts-object" tabindex="-1"><code>new Query::Query(opts: object)</code> <a class="header-anchor" href="#new-query-query-opts-object" aria-hidden="true">#</a></h3><ul><li><code>opts.dialect</code>: (required) \u76EE\u6807\u6570\u636E\u5E93\u7C7B\u578B, \u652F\u6301 <code>mysql</code>, <code>sqlite</code>, <code>postgresql</code>. </li></ul>',11),q={id:"query-knex-readonly",tabindex:"-1"},g=n("code",null,"Query::knex",-1),m=n("a",{class:"header-anchor",href:"#query-knex-readonly","aria-hidden":"true"},"#",-1),h=n("p",null,"knex \u7684\u5B9E\u4F8B.",-1),f={id:"query-dialect-readonly",tabindex:"-1"},w=n("code",null,"Query::Dialect",-1),b=n("a",{class:"header-anchor",href:"#query-dialect-readonly","aria-hidden":"true"},"#",-1),_=p(`<p>Dialect \u7684\u5B9E\u4F8B. Dialect \u4E0A\u5305\u542B\u4E86\u9002\u7528\u4E8E\u7279\u5B9A\u6570\u636E\u5E93\u7684 escape*, value \u8F6C\u6362, \u65F6\u533A\u8F6C\u6362\u7B49\u529F\u80FD. \u60F3\u4E86\u89E3\u66F4\u591A\u5173\u4E8E\u4E0D\u540C\u7684 Dialect \u7684\u4FE1\u606F, \u53EF\u53C2\u8003\u6D4B\u8BD5\u7528\u4F8B:</p><ul><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-mysql.js" target="_blank" rel="noopener noreferrer">mysql</a></li><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-sqlite.js" target="_blank" rel="noopener noreferrer">sqlite</a></li><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-postgresql.js" target="_blank" rel="noopener noreferrer">postgresql</a></li></ul><h3 id="query-escape-sql-args" tabindex="-1"><code>Query::escape(sql, args)</code> <a class="header-anchor" href="#query-escape-sql-args" aria-hidden="true">#</a></h3><p><strong>signature</strong> <code>Query::escape(sql: string, values: any[])</code></p><p>\u8F6C\u4E49 sql \u8BED\u53E5\u4E2D\u7684\u5360\u4F4D\u7B26, \u5305\u62EC:</p><ul><li><code>?</code>, \u5F53\u4F5C sql \u4E2D\u7684 value \u6765\u8F6C\u4E49</li><li><code>??</code>, \u5F53\u4F5C sql \u4E2D\u7684 identifier \u6765\u8F6C\u4E49</li></ul><p>\u5982\u4E0B, \u4EE5 escape mysql \u8BED\u53E5\u4E3A\u4F8B</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

query<span class="token punctuation">.</span><span class="token function">escape</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">select * from ?? where user_id = ?</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span> <span class="token punctuation">[</span> <span class="token string">&#39;user&#39;</span><span class="token punctuation">,</span> <span class="token number">1</span> <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;select * from \`user\` where user_id = &#39;1&#39;&quot;</span>
</code></pre></div><h3 id="query-escapeid-els" tabindex="-1"><code>Query::escapeId(...els)</code> <a class="header-anchor" href="#query-escapeid-els" aria-hidden="true">#</a></h3><p><strong>signature</strong> <code>Query::escapeId(...els: (string | number)): string</code></p><p>\u5C06\u4E00\u7CFB\u5217 <code>eles</code> \u6309\u7167 SQL identifier \u8F6C\u4E49\u5904\u7406\u540E, \u8F93\u51FA\u6309\u7167 <code>.</code> \u805A\u5408\u7684\u5B57\u7B26\u4E32. <code>eles</code> \u53EF\u4EE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32, \u4E5F\u53EF\u4EE5\u662F\u4E00\u4E2A\u5B57\u7B26\u4E32\u6570\u7EC4.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeId</span><span class="token punctuation">(</span><span class="token string">&#39;user.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; \`user.id\`</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;sqlite&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeId</span><span class="token punctuation">(</span><span class="token string">&#39;user.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; \`user.id\`</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeId</span><span class="token punctuation">(</span><span class="token string">&#39;user.id&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &quot;user&quot;.&quot;id&quot;</span>
</code></pre></div><h3 id="query-escapeval-val-timezone" tabindex="-1"><code>Query::escapeVal(val, timezone?)</code> <a class="header-anchor" href="#query-escapeval-val-timezone" aria-hidden="true">#</a></h3><p><strong>signature</strong> <code>Query::escapeVal(val: any, timezone?: string): string</code></p><p>\u5C06 <code>val</code> \u6309\u7167 SQL value \u8F6C\u4E49\u5904\u7406\u540E\u8F93\u51FA. \u6839\u636E <code>dialect</code> \u7684\u7C7B\u578B\u4E0D\u540C, \u6709\u4E0D\u540C\u7684\u5904\u7406\u7ED3\u679C.</p><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token keyword">undefined</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; NULL</span>
<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token number">123</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; NULL</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;sqlite&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token function">BigInt</span><span class="token punctuation">(</span><span class="token number">12</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 12</span>

<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token number">NaN</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; NaN</span>

<span class="token keyword">const</span> d <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token number">1378322111133</span><span class="token punctuation">)</span>
<span class="token keyword">const</span> tzOffsetMillis <span class="token operator">=</span> <span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getTimezoneOffset</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">60</span> <span class="token operator">*</span> <span class="token number">1000</span><span class="token punctuation">)</span>
<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> tzOffsetMillis<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; 2013-09-04 19:15:11.133</span>
<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;Z&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &#39;2013-09-04T19:15:11.133Z&#39;</span>
<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;-0000&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &#39;2013-09-04T19:15:11.133Z&#39;</span>
<span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;postgresql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">escapeVal</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span>d<span class="token punctuation">.</span><span class="token function">getTime</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;-0400&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">// =&gt; &#39;2013-09-04T15:15:11.133Z&#39;</span>
</code></pre></div><p>\u5173\u4E8E\u4E0D\u540C\u7684 dialect \u7684 <code>escapeVal</code> \u5904\u7406\u793A\u4F8B, \u53EF\u53C2\u8003\u6D4B\u8BD5\u7528\u4F8B:</p><ul><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-mysql.js" target="_blank" rel="noopener noreferrer">mysql</a></li><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-sqlite.js" target="_blank" rel="noopener noreferrer">sqlite</a></li><li><a href="https://github.com/fxjs-modules/orm/blob/@fxjs/sql-query@0.8.1/packages/sql-query/test/integration/test-dialect-postgresql.js" target="_blank" rel="noopener noreferrer">postgresql</a></li></ul><p><strong>\u6CE8\u610F</strong> <code>timezone</code> \u7684\u542B\u4E49\u6839\u636E\u4E0D\u540C\u7684\u6570\u636E\u5E93, \u5904\u7406\u4EA6\u6709\u4E0D\u540C, \u8BF7\u53C2\u8003\u76F8\u5173\u6D4B\u8BD5\u7528\u4F8B.</p><h3 id="query-create" tabindex="-1"><code>Query::create()</code> <a class="header-anchor" href="#query-create" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chainBuilder <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53C2\u8003<a href="https://github.com/fxjs-modules/orm/blob/%40fxjs/sql-query%400.8.1/packages/sql-query/test/integration/test-create.js" target="_blank" rel="noopener noreferrer"><strong>\u6D4B\u8BD5\u7528\u4F8B</strong></a></p><h3 id="query-select" tabindex="-1"><code>Query::select()</code> <a class="header-anchor" href="#query-select" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chainBuilder <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53C2\u8003<a href="https://github.com/fxjs-modules/orm/blob/%40fxjs/sql-query%400.8.1/packages/sql-query/test/integration/test-select.js" target="_blank" rel="noopener noreferrer"><strong>\u6D4B\u8BD5\u7528\u4F8B</strong></a></p><h3 id="query-insert" tabindex="-1"><code>Query::insert()</code> <a class="header-anchor" href="#query-insert" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chainBuilder <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">insert</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53C2\u8003<a href="https://github.com/fxjs-modules/orm/blob/%40fxjs/sql-query%400.8.1/packages/sql-query/test/integration/test-insert.js" target="_blank" rel="noopener noreferrer"><strong>\u6D4B\u8BD5\u7528\u4F8B</strong></a></p><h3 id="query-update" tabindex="-1"><code>Query::update()</code> <a class="header-anchor" href="#query-update" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chainBuilder <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">update</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">table</span><span class="token punctuation">(</span><span class="token string">&#39;table1&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p>\u53C2\u8003<a href="https://github.com/fxjs-modules/orm/blob/%40fxjs/sql-query%400.8.1/packages/sql-query/test/integration/test-update.js" target="_blank" rel="noopener noreferrer"><strong>\u6D4B\u8BD5\u7528\u4F8B</strong></a></p><h3 id="query-remove" tabindex="-1"><code>Query::remove()</code> <a class="header-anchor" href="#query-remove" aria-hidden="true">#</a></h3><div class="language-js"><pre><code><span class="token keyword">const</span> <span class="token punctuation">{</span> Query <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&quot;@fxjs/query&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> query <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Query</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">dialect</span><span class="token operator">:</span> <span class="token string">&#39;mysql&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token keyword">const</span> chainBuilder <span class="token operator">=</span> query<span class="token punctuation">.</span><span class="token function">remove</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre></div><p><strong>signature</strong> <code>Query::remove()</code></p><p>\u53C2\u8003<a href="https://github.com/fxjs-modules/orm/blob/%40fxjs/sql-query%400.8.1/packages/sql-query/test/integration/test-remove.js" target="_blank" rel="noopener noreferrer"><strong>\u6D4B\u8BD5\u7528\u4F8B</strong></a></p><h2 id="comparators" tabindex="-1">comparators <a class="header-anchor" href="#comparators" aria-hidden="true">#</a></h2><p>comparators \u662F\u5728 query \u4E2D\u751F\u6210\u7279\u5B9A\u6BD4\u8F83\u5BF9\u8C61\u7684 utils, \u5B83\u5305\u542B\u4EE5\u4E0B\u6BD4\u8F83\u64CD\u4F5C:</p><ul><li><code>between</code></li><li><code>not_between</code></li><li><code>like</code></li><li><code>not_like</code></li><li><code>eq</code></li><li><code>ne</code></li><li><code>gt</code></li><li><code>gte</code></li><li><code>lt</code></li><li><code>lte</code></li><li><code>in</code></li><li><code>not_in</code></li></ul><p>(To be continued)</p>`,39);function x(j,Q,v,T,V,N){const a=c("Badge");return u(),l("div",null,[n("h1",i,[k,s(),t(a,{type:"warning"},{default:e(()=>[s("WIP")]),_:1}),s(),d]),y,n("h3",q,[g,s(),t(a,{type:"warning"},{default:e(()=>[s("readonly")]),_:1}),s(),m]),h,n("h3",f,[w,s(),t(a,{type:"warning"},{default:e(()=>[s("readonly")]),_:1}),s(),b]),_])}var I=o(r,[["render",x]]);export{D as __pageData,I as default};
